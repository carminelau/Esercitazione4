<?xml version="1.0" encoding="UTF-8" standalone="no"?><ProgramOp><varDeclListOp><varDecOp>var<idListInitOp>(Id,"c")<ExprOp>(String_const,"1")</ExprOp></idListInitOp></varDecOp></varDeclListOp><procListOp><procOp>sommac<ParDeclListOp><ParDeclOp>(type,"integer")a</ParDeclOp><ParDeclOp>(type,"real")b</ParDeclOp><ParDeclOp>(type,"string")size</ParDeclOp></ParDeclListOp>real<varDeclListOp><varDecOp>real<idListInitOp>(Id,"result")<ExprOp>(var is null</ExprOp></idListInitOp></varDecOp></varDeclListOp><StatListOp>Assign{id=result, expr=AddOp{e1=AddOp{e1=Id a, e2=Id b}, e2=Id c}}IfStatOp{GtOp{e1=Id result, e2=String_const 100},statementList [Assign{id=size, expr=Id valore}],VarDeclListOp{list=[var {valore=String_const grande}]},ElseOp{Vardecllist=VarDeclListOp{list=[var {valore=String_const piccola}]}statList=statementList [Assign{id=size, expr=Id valore}]}}ReturnStatOp{expr=Id result}</StatListOp></procOp><procOp>stampa<ParDeclListOp><ParDeclOp>(type,"string")messaggio</ParDeclOp></ParDeclListOp><varDeclListOp><varDecOp>var<idListInitOp>(Id,"i")<ExprOp>(String_const,"1")</ExprOp></idListInitOp></varDecOp></varDeclListOp><StatListOp>WhileStatOp{vardecllistVarDeclListOp{list=[var {incremento=String_const 1}]}statListOp=statementList [WriteStatOp{expr=String_const mode=WRITE_LN}, Assign{id=i, expr=AddOp{e1=Id i, e2=Id incremento}}], e=LeOp{e1=Id i, e2=String_const 4}}WriteStatOp{expr=Id messaggiomode=WRITE_LN}</StatListOp></procOp></procListOp></ProgramOp>